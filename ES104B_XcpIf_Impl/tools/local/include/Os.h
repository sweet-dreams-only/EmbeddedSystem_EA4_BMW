/* Stub file manually craeted to only contain the items that are needed */

#ifndef NXTR_CONTRACT_LOCAL_OS_H
#define NXTR_CONTRACT_LOCAL_OS_H

/* From Os_Types.h */
/*! This data type points to a structure which holds the arguments for a call to a non-trusted function. */
typedef P2VAR(void, TYPEDEF, OS_APPL_DATA) Os_NonTrustedFunctionParameterRefType;


/* From Os_Types_Lcfg.h */
typedef enum
{
    NtWrapS_Rte_Call_CopyCalPageReq_Oper = 0,
    NtWrapS_Rte_Call_SetCalPageReq_Oper = 1,
    NtWrapS_Xcp_Event = 2
}Os_NonTrustedFunctionIndexType;

/*! OS-Application identifier. This is generated by the Os. Created here for reference*/
typedef enum
{
  Appl10 = 0
} ApplicationType;

/* From Os.h */
extern FUNC(StatusType, OS_CODE) Os_CallNonTrustedFunction
(
  Os_NonTrustedFunctionIndexType FunctionIndex,
  Os_NonTrustedFunctionParameterRefType FunctionParams
);

extern FUNC(ApplicationType, OS_CODE) GetApplicationID(void);

#endif

#ifdef CDD_XCPIF_CFG_PRIVATE_H
/* Os.h is added into the user type to define TaskRefType to the Rte_type.h. However, calling the OS.h file in earlier brought in these files which were not defined. The preprocessor statements were added to control when the file referenced the values. */

/* Found in Os_Lcfg.h */
extern FUNC(void, OS_NTWRAPS_RTE_CALL_COPYCALPAGEREQ_OPER_CODE) NONTRUSTED_NtWrapS_Rte_Call_CopyCalPageReq_Oper
(
  Os_NonTrustedFunctionIndexType FunctionIndex,
  Os_NonTrustedFunctionParameterRefType FunctionParams
);

extern FUNC(void, OS_NTWRAPS_RTE_CALL_SETCALPAGEREQ_OPER_CODE) NONTRUSTED_NtWrapS_Rte_Call_SetCalPageReq_Oper
(
  Os_NonTrustedFunctionIndexType FunctionIndex,
  Os_NonTrustedFunctionParameterRefType FunctionParams
);

extern FUNC(void, OS_NTWRAPS_XCP_EVENT_CODE) NONTRUSTED_NtWrapS_Xcp_Event
(
  Os_NonTrustedFunctionIndexType FunctionIndex,
  Os_NonTrustedFunctionParameterRefType FunctionParams
);

extern FUNC(uint8, OS_CODE) Os_Call_XcpAppl_CalibrationWriteTrustd
(
  Xcp_AddressPtrType Arg1,
  const uint8* Arg2,
  uint8 Arg3
);
# define Call_XcpAppl_CalibrationWriteTrustd     Os_Call_XcpAppl_CalibrationWriteTrustd

#endif
