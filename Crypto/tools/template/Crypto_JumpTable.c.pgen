/**
*  \file
*
*  \brief       BMW Crypto Library
*
*  This file contains the jumptable used for direct access to the crypto routines. (e.g. : from the bootloader)
*
*  \project     BMW Platform Software
*
*  \copyright   BMW AG 2015 - 2017
*
*  \version     5.2.0
*
*/


/*------------------------------------------------------------------------------
                      Include Section
-------------------------------------------------------------------------------*/

#include "Crypto_JumpTable.h"

/*------------------------------------------------------------------------------
                      Macros
------------------------------------------------------------------------------*/

/* check version of the module */
#if (!CryptoClassic_CHECK_VERSION(5,2,0))
#error "Version of Crypto_JumpTable.c does not match the version of the module!"
#endif

%{# into(module('CryptoClassic')) }%
%{: if  value(ref('Crypto_SHA256/Enable_SHA256_JumpTable')) == True
     or value(ref('Crypto_SHA384/Enable_SHA384_JumpTable')) == True
     or value(ref('Crypto_SHA512/Enable_SHA512_JumpTable')) == True
     or value(ref('Crypto_Certificate/Enable_Certificate_JumpTable')) == True
     or value(ref('Crypto_ECDSA/Enable_ECDSA_JumpTable')) == True
     or value(ref('Crypto_RSA/Enable_RSA_JumpTable')) == True }%

#define  Crypto_START_SEC_CONST_JUMPTABLE
#include "Crypto_MemMap.h"


volatile const Crypto_JumpTableStruct CryptoJumptable = {
  %{# into(container('Crypto_SHA256')) }%
  %{: if  value(ref('Enable_SHA256_JumpTable')) == True }%
  &Crypto_SHA256Init,
  &Crypto_SHA256Process,
  &Crypto_SHA256Done,
  %{:}%
  %{# leave()}%
  %{# into(container('Crypto_SHA384')) }%
  %{: if  value(ref('Enable_SHA384_JumpTable')) == True }%
  &Crypto_SHA384Init,
  &Crypto_SHA384Done,
  %{:}%
  %{# leave()}%
  %{# into(container('Crypto_SHA512')) }%
  %{: if  value(ref('Enable_SHA512_JumpTable')) == True }%
  &Crypto_SHA512Init,
  &Crypto_SHA512Process,
  &Crypto_SHA512Done,
  %{:}%
  %{# leave()}%
  %{# into(container('Crypto_ECDSA')) }%
  %{: if  value(ref('Enable_ECDSA_JumpTable')) == True }%
  &Crypto_EccVerifyHash,
  %{:}%
  %{# leave()}%
  %{# into(container('Crypto_RSA')) }%
  %{: if  value(ref('Enable_RSA_JumpTable')) == True }%
  &Crypto_RsaVerifyHash,
  %{:}%
  %{# leave()}%
  %{# into(container('Crypto_Certificate')) }%
  %{: if  value(ref('Enable_Certificate_JumpTable')) == True }%
  &Crypto_CertVerifiy,
  %{:}%
  %{# leave()}%
};

#define  Crypto_STOP_SEC_CONST_JUMPTABLE
#include "Crypto_MemMap.h"

%{:}%