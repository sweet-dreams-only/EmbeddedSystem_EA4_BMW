%{+ Coding_Functions }%
%{#
GetGeneralConfig()
GetAreasConfig(True)
}%
<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * \file
 *
 * \brief       Coding - This file is the SW-C description for the Coding module.
 *
 * \project     BMW Platform Software
 *
 * \copyright   BMW AG 2016 - 2017
 *
 * \version     5.2.1
 *
 */
-->
<AUTOSAR xmlns="http://autosar.org/schema/r4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://autosar.org/schema/r4.0 AUTOSAR_4-3-0_STRICT_COMPACT.xsd">
  <AR-PACKAGES>
    <AR-PACKAGE>
      <SHORT-NAME>BMW</SHORT-NAME>
      <AR-PACKAGES>
        <AR-PACKAGE>
          <SHORT-NAME>Platform</SHORT-NAME>
          <AR-PACKAGES>
            <!-- Coding -->
            <AR-PACKAGE>
              <SHORT-NAME>Coding</SHORT-NAME>
                <AR-PACKAGES>
                <!-- Coding CompuMethods -->
                <AR-PACKAGE>
                  <SHORT-NAME>CompuMethods</SHORT-NAME>
                  <ELEMENTS>
                    <COMPU-METHOD>
                      <SHORT-NAME>CM_LifeCycleRequest</SHORT-NAME>
                      <CATEGORY>TEXTTABLE</CATEGORY>
                      <COMPU-INTERNAL-TO-PHYS>
                        <COMPU-SCALES>
                          <COMPU-SCALE>
                            <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                            <UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
                            <COMPU-CONST>
                              <VT>CODING_INITIALIZED</VT>
                            </COMPU-CONST>
                          </COMPU-SCALE>
                          <COMPU-SCALE>
                            <LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
                            <UPPER-LIMIT INTERVAL-TYPE="CLOSED">1</UPPER-LIMIT>
                            <COMPU-CONST>
                              <VT>CODING_RUNNING</VT>
                            </COMPU-CONST>
                          </COMPU-SCALE>
                          <COMPU-SCALE>
                            <LOWER-LIMIT INTERVAL-TYPE="CLOSED">2</LOWER-LIMIT>
                            <UPPER-LIMIT INTERVAL-TYPE="CLOSED">2</UPPER-LIMIT>
                            <COMPU-CONST>
                              <VT>CODING_STOPPED</VT>
                            </COMPU-CONST>
                          </COMPU-SCALE>
                        </COMPU-SCALES>
                      </COMPU-INTERNAL-TO-PHYS>
                    </COMPU-METHOD>
                  </ELEMENTS>
                </AR-PACKAGE>
                <!-- Coding ImplementationDataTypes -->
                <AR-PACKAGE>
                  <SHORT-NAME>ImplementationDataTypes</SHORT-NAME>
                  <ELEMENTS>
                    <IMPLEMENTATION-DATA-TYPE>
                      <SHORT-NAME>Coding_LifeCycleRequestType</SHORT-NAME>
                      <CATEGORY>TYPE_REFERENCE</CATEGORY>
                      <SW-DATA-DEF-PROPS>
                        <SW-DATA-DEF-PROPS-VARIANTS>
                          <SW-DATA-DEF-PROPS-CONDITIONAL>
                            <COMPU-METHOD-REF DEST="COMPU-METHOD">/BMW/Platform/Coding/CompuMethods/CM_LifeCycleRequest</COMPU-METHOD-REF>
                            <IMPLEMENTATION-DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</IMPLEMENTATION-DATA-TYPE-REF>
                            <SW-IMPL-POLICY>STANDARD</SW-IMPL-POLICY>
                          </SW-DATA-DEF-PROPS-CONDITIONAL>
                        </SW-DATA-DEF-PROPS-VARIANTS>
                      </SW-DATA-DEF-PROPS>
                    </IMPLEMENTATION-DATA-TYPE>
                    <IMPLEMENTATION-DATA-TYPE>
                      <SHORT-NAME>Coding_CafIdArrayType</SHORT-NAME>
                      <CATEGORY>ARRAY</CATEGORY>
                      <SUB-ELEMENTS>
                        <IMPLEMENTATION-DATA-TYPE-ELEMENT>
                          <SHORT-NAME>Coding_CafIdSubarrayType</SHORT-NAME>
                          <CATEGORY>TYPE_REFERENCE</CATEGORY>
                          <ARRAY-SIZE>%{= len(codingConfig.coding_areas_list)*codingConfig.caf_id_size }%</ARRAY-SIZE>
                          <ARRAY-SIZE-SEMANTICS>FIXED-SIZE</ARRAY-SIZE-SEMANTICS>
                          <SW-DATA-DEF-PROPS>
                            <SW-DATA-DEF-PROPS-VARIANTS>
                              <SW-DATA-DEF-PROPS-CONDITIONAL>
                                <IMPLEMENTATION-DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</IMPLEMENTATION-DATA-TYPE-REF>
                              </SW-DATA-DEF-PROPS-CONDITIONAL>
                            </SW-DATA-DEF-PROPS-VARIANTS>
                          </SW-DATA-DEF-PROPS>
                        </IMPLEMENTATION-DATA-TYPE-ELEMENT>
                      </SUB-ELEMENTS>
                    </IMPLEMENTATION-DATA-TYPE>
%{@ data_size in sorted(coding_data_types) }%
                    <IMPLEMENTATION-DATA-TYPE>
                      <SHORT-NAME>%{= coding_data_types[data_size] }%</SHORT-NAME>
                      <CATEGORY>ARRAY</CATEGORY>
                      <SW-DATA-DEF-PROPS>
                        <SW-DATA-DEF-PROPS-VARIANTS>
                          <SW-DATA-DEF-PROPS-CONDITIONAL>
                            <SW-CALIBRATION-ACCESS>READ-ONLY</SW-CALIBRATION-ACCESS>
                          </SW-DATA-DEF-PROPS-CONDITIONAL>
                        </SW-DATA-DEF-PROPS-VARIANTS>
                      </SW-DATA-DEF-PROPS>
                      <SUB-ELEMENTS>
                        <IMPLEMENTATION-DATA-TYPE-ELEMENT>
                          <SHORT-NAME>%{= coding_data_types[data_size] }%Element</SHORT-NAME>
                          <CATEGORY>TYPE_REFERENCE</CATEGORY>
                          <ARRAY-SIZE>%{= data_size }%</ARRAY-SIZE>
                          <ARRAY-SIZE-SEMANTICS>FIXED-SIZE</ARRAY-SIZE-SEMANTICS>
                          <SW-DATA-DEF-PROPS>
                            <SW-DATA-DEF-PROPS-VARIANTS>
                              <SW-DATA-DEF-PROPS-CONDITIONAL>
                                <IMPLEMENTATION-DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</IMPLEMENTATION-DATA-TYPE-REF>
                              </SW-DATA-DEF-PROPS-CONDITIONAL>
                            </SW-DATA-DEF-PROPS-VARIANTS>
                          </SW-DATA-DEF-PROPS>
                        </IMPLEMENTATION-DATA-TYPE-ELEMENT>
                      </SUB-ELEMENTS>
                    </IMPLEMENTATION-DATA-TYPE>
%{@}%
                  </ELEMENTS>
                </AR-PACKAGE>
                <!-- Coding PortInterfaces -->
                <AR-PACKAGE>
                  <SHORT-NAME>PortInterfaces</SHORT-NAME>
                  <ELEMENTS>
                    <SENDER-RECEIVER-INTERFACE>
                      <SHORT-NAME>ILifeCycleRequest</SHORT-NAME>
                      <IS-SERVICE>true</IS-SERVICE>
                      <DATA-ELEMENTS>
                        <VARIABLE-DATA-PROTOTYPE>
                          <SHORT-NAME>requestMode</SHORT-NAME>
                          <TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/BMW/Platform/Coding/ImplementationDataTypes/Coding_LifeCycleRequestType</TYPE-TREF>
                        </VARIABLE-DATA-PROTOTYPE>
                      </DATA-ELEMENTS>
                    </SENDER-RECEIVER-INTERFACE>
                    <CLIENT-SERVER-INTERFACE>
                      <SHORT-NAME>Coding_SVKInterface</SHORT-NAME>
                      <IS-SERVICE>false</IS-SERVICE>
                      <OPERATIONS>
                        <CLIENT-SERVER-OPERATION>
                          <SHORT-NAME>GetCafIds</SHORT-NAME>
                          <ARGUMENTS>
                            <ARGUMENT-DATA-PROTOTYPE>
                              <SHORT-NAME>cafIds</SHORT-NAME>
                              <TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/BMW/Platform/Coding/ImplementationDataTypes/Coding_CafIdArrayType</TYPE-TREF>
                              <DIRECTION>OUT</DIRECTION>
                            </ARGUMENT-DATA-PROTOTYPE>
                            <ARGUMENT-DATA-PROTOTYPE>
                              <SHORT-NAME>numberOfCafIds</SHORT-NAME>
                              <TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint16</TYPE-TREF>
                              <DIRECTION>OUT</DIRECTION>
                            </ARGUMENT-DATA-PROTOTYPE>
                          </ARGUMENTS>
                          <POSSIBLE-ERROR-REFS>
                            <POSSIBLE-ERROR-REF DEST="APPLICATION-ERROR">/BMW/Platform/Coding/PortInterfaces/Coding_SVKInterface/E_OK</POSSIBLE-ERROR-REF>
                          </POSSIBLE-ERROR-REFS>
                        </CLIENT-SERVER-OPERATION>
                      </OPERATIONS>
                      <POSSIBLE-ERRORS>
                        <APPLICATION-ERROR>
                          <SHORT-NAME>E_OK</SHORT-NAME>
                          <ERROR-CODE>0</ERROR-CODE>
                        </APPLICATION-ERROR>
                      </POSSIBLE-ERRORS>
                    </CLIENT-SERVER-INTERFACE>
%{: if generalConfig.data_check }%
%{@ area_context in codingConfig.coding_areas_list }%
%{@   function_context in area_context.coding_functions_list }%
%{:     if function_context.function_data_check }%
                    <CLIENT-SERVER-INTERFACE>
                      <SHORT-NAME>Check%{= function_context.function_name }%</SHORT-NAME>
                      <IS-SERVICE>false</IS-SERVICE>
                      <OPERATIONS>
                        <CLIENT-SERVER-OPERATION>
                          <SHORT-NAME>CheckPlausibility</SHORT-NAME>
                          <ARGUMENTS>
                            <ARGUMENT-DATA-PROTOTYPE>
                              <SHORT-NAME>Value</SHORT-NAME>
%{:       if function_context.function_appl_type != "bytearray" }%
                              <TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/%{= function_context.function_appl_type }%</TYPE-TREF>
%{:       else }%
                              <TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/BMW/Platform/Coding/ImplementationDataTypes/Coding_Data%{= function_context.function_end_byte - function_context.function_start_byte +1 }%ByteType</TYPE-TREF>
%{:}%
                              <DIRECTION>IN</DIRECTION>
                            </ARGUMENT-DATA-PROTOTYPE>
                          </ARGUMENTS>
                          <POSSIBLE-ERROR-REFS>
                            <POSSIBLE-ERROR-REF DEST="APPLICATION-ERROR">/BMW/Platform/Coding/PortInterfaces/Check%{= function_context.function_name }%/E_NOT_OK</POSSIBLE-ERROR-REF>
                          </POSSIBLE-ERROR-REFS>
                        </CLIENT-SERVER-OPERATION>
                      </OPERATIONS>
                      <POSSIBLE-ERRORS>
                        <APPLICATION-ERROR>
                          <SHORT-NAME>E_NOT_OK</SHORT-NAME>
                          <ERROR-CODE>1</ERROR-CODE>
                        </APPLICATION-ERROR>
                      </POSSIBLE-ERRORS>
                    </CLIENT-SERVER-INTERFACE>
%{:}%
%{@}%
%{@}%
%{:}%
                    <MODE-SWITCH-INTERFACE>
                      <SHORT-NAME>Coding_BusCom</SHORT-NAME>
                      <IS-SERVICE>true</IS-SERVICE>
                      <MODE-GROUP>
                        <SHORT-NAME>Mode</SHORT-NAME>
                        <TYPE-TREF DEST="MODE-DECLARATION-GROUP">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_BusComMode</TYPE-TREF>
                      </MODE-GROUP>
                    </MODE-SWITCH-INTERFACE>
                    <MODE-SWITCH-INTERFACE>
                      <SHORT-NAME>Coding_DataMode</SHORT-NAME>
                      <IS-SERVICE>false</IS-SERVICE>
                      <MODE-GROUP>
                        <SHORT-NAME>currentDataMode</SHORT-NAME>
                        <TYPE-TREF DEST="MODE-DECLARATION-GROUP">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_DataMode</TYPE-TREF>
                      </MODE-GROUP>
                    </MODE-SWITCH-INTERFACE>
                    <MODE-SWITCH-INTERFACE>
                      <SHORT-NAME>SessionChangeIndication</SHORT-NAME>
                      <IS-SERVICE>true</IS-SERVICE>
                      <MODE-GROUP>
                        <SHORT-NAME>currentSessionMode</SHORT-NAME>
                        <TYPE-TREF DEST="MODE-DECLARATION-GROUP">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_SessionMode</TYPE-TREF>
                      </MODE-GROUP>
                    </MODE-SWITCH-INTERFACE>
                    <MODE-SWITCH-INTERFACE>
                      <SHORT-NAME>ILifeCycle</SHORT-NAME>
                      <IS-SERVICE>false</IS-SERVICE>
                      <MODE-GROUP>
                        <SHORT-NAME>Mode</SHORT-NAME>
                        <TYPE-TREF DEST="MODE-DECLARATION-GROUP">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_LifeCycle</TYPE-TREF>
                      </MODE-GROUP>
                    </MODE-SWITCH-INTERFACE>
%{: if generalConfig.condition_check }%
                    <MODE-SWITCH-INTERFACE>
                      <SHORT-NAME>ConditionMode</SHORT-NAME>
                      <IS-SERVICE>false</IS-SERVICE>
                      <MODE-GROUP>
                        <SHORT-NAME>currentConditionMode</SHORT-NAME>
                        <TYPE-TREF DEST="MODE-DECLARATION-GROUP">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_ConditionMode</TYPE-TREF>
                      </MODE-GROUP>
                    </MODE-SWITCH-INTERFACE>
%{:}%
                    <CLIENT-SERVER-INTERFACE>
                      <SHORT-NAME>Data</SHORT-NAME>
                      <IS-SERVICE>false</IS-SERVICE>
                      <OPERATIONS>
%{@ area_context in codingConfig.coding_areas_list }%
%{@   function_context in area_context.coding_functions_list }%
                        <CLIENT-SERVER-OPERATION>
                          <SHORT-NAME>Get%{= function_context.function_name }%</SHORT-NAME>
                          <ARGUMENTS>
                            <ARGUMENT-DATA-PROTOTYPE>
                              <SHORT-NAME>Value</SHORT-NAME>
%{:     if function_context.function_appl_type != "bytearray" }%
                              <TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/%{= function_context.function_appl_type }%</TYPE-TREF>
%{:     else }%
                              <TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/BMW/Platform/Coding/ImplementationDataTypes/Coding_Data%{= function_context.function_end_byte - function_context.function_start_byte +1 }%ByteType</TYPE-TREF>
%{:}%
                              <DIRECTION>OUT</DIRECTION>
                            </ARGUMENT-DATA-PROTOTYPE>
                          </ARGUMENTS>
                          <POSSIBLE-ERROR-REFS>
                            <POSSIBLE-ERROR-REF DEST="APPLICATION-ERROR">/BMW/Platform/Coding/PortInterfaces/Data/E_NOT_OK</POSSIBLE-ERROR-REF>
                          </POSSIBLE-ERROR-REFS>
                        </CLIENT-SERVER-OPERATION>
%{@}%
%{@}%
                      </OPERATIONS>
                      <POSSIBLE-ERRORS>
                        <APPLICATION-ERROR>
                          <SHORT-NAME>E_NOT_OK</SHORT-NAME>
                          <ERROR-CODE>1</ERROR-CODE>
                        </APPLICATION-ERROR>
                      </POSSIBLE-ERRORS>
                    </CLIENT-SERVER-INTERFACE>
                  </ELEMENTS>
                </AR-PACKAGE>
                <!-- Coding ModeDeclarationGroups -->
                <AR-PACKAGE>
                  <SHORT-NAME>ModeDeclarationGroups</SHORT-NAME>
                  <ELEMENTS>
                    <MODE-DECLARATION-GROUP>
                      <SHORT-NAME>Coding_DataMode</SHORT-NAME>
                      <CATEGORY>EXPLICIT_ORDER</CATEGORY>
                      <INITIAL-MODE-REF DEST="MODE-DECLARATION">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_DataMode/NCDSTATE_UNDEFINED</INITIAL-MODE-REF>
                      <MODE-DECLARATIONS>
                        <MODE-DECLARATION>
                          <SHORT-NAME>NCDSTATE_INPROGRESS</SHORT-NAME>
                          <VALUE>0</VALUE>
                        </MODE-DECLARATION>
                        <MODE-DECLARATION>
                          <SHORT-NAME>NCDSTATE_DEFAULT</SHORT-NAME>
                          <VALUE>1</VALUE>
                        </MODE-DECLARATION>
                        <MODE-DECLARATION>
                          <SHORT-NAME>NCDSTATE_QUALIFIED</SHORT-NAME>
                          <VALUE>2</VALUE>
                        </MODE-DECLARATION>
                        <MODE-DECLARATION>
                          <SHORT-NAME>NCDSTATE_UNDEFINED</SHORT-NAME>
                          <VALUE>3</VALUE>
                        </MODE-DECLARATION>
                        <MODE-DECLARATION>
                          <SHORT-NAME>NCDSTATE_UNQUALIFIED</SHORT-NAME>
                          <VALUE>4</VALUE>
                        </MODE-DECLARATION>
                      </MODE-DECLARATIONS>
                      <ON-TRANSITION-VALUE>5</ON-TRANSITION-VALUE>
                    </MODE-DECLARATION-GROUP>
                    <MODE-DECLARATION-GROUP>
                      <SHORT-NAME>Coding_BusComMode</SHORT-NAME>
                      <CATEGORY>EXPLICIT_ORDER</CATEGORY>
                      <INITIAL-MODE-REF DEST="MODE-DECLARATION">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_BusComMode/CODING_BUSCOMOFF</INITIAL-MODE-REF>
                      <MODE-DECLARATIONS>
                        <MODE-DECLARATION>
                          <SHORT-NAME>CODING_BUSCOMOFF</SHORT-NAME>
                          <VALUE>0</VALUE>
                        </MODE-DECLARATION>
                        <MODE-DECLARATION>
                          <SHORT-NAME>CODING_BUSCOMON</SHORT-NAME>
                          <VALUE>1</VALUE>
                        </MODE-DECLARATION>
                      </MODE-DECLARATIONS>
                      <ON-TRANSITION-VALUE>2</ON-TRANSITION-VALUE>
                    </MODE-DECLARATION-GROUP>
                    <MODE-DECLARATION-GROUP>
                      <SHORT-NAME>Coding_LifeCycle</SHORT-NAME>
                      <CATEGORY>EXPLICIT_ORDER</CATEGORY>
                      <INITIAL-MODE-REF DEST="MODE-DECLARATION">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_LifeCycle/CODING_STOPPED</INITIAL-MODE-REF>
                      <MODE-DECLARATIONS>
                        <MODE-DECLARATION>
                          <SHORT-NAME>CODING_INITIALIZED</SHORT-NAME>
                          <VALUE>0</VALUE>
                        </MODE-DECLARATION>
                        <MODE-DECLARATION>
                          <SHORT-NAME>CODING_RUNNING</SHORT-NAME>
                          <VALUE>1</VALUE>
                        </MODE-DECLARATION>
                        <MODE-DECLARATION>
                          <SHORT-NAME>CODING_STOPPED</SHORT-NAME>
                          <VALUE>2</VALUE>
                        </MODE-DECLARATION>
                      </MODE-DECLARATIONS>
                      <ON-TRANSITION-VALUE>3</ON-TRANSITION-VALUE>
                    </MODE-DECLARATION-GROUP>
                    <MODE-DECLARATION-GROUP>
                      <SHORT-NAME>Coding_SessionMode</SHORT-NAME>
                      <CATEGORY>EXPLICIT_ORDER</CATEGORY>
                      <INITIAL-MODE-REF DEST="MODE-DECLARATION">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_SessionMode/CODING_SESSION_INACTIVE</INITIAL-MODE-REF>
                      <MODE-DECLARATIONS>
                        <MODE-DECLARATION>
                          <SHORT-NAME>CODING_SESSION_ACTIVE</SHORT-NAME>
                          <VALUE>0</VALUE>
                        </MODE-DECLARATION>
                        <MODE-DECLARATION>
                          <SHORT-NAME>CODING_SESSION_INACTIVE</SHORT-NAME>
                          <VALUE>1</VALUE>
                        </MODE-DECLARATION>
                      </MODE-DECLARATIONS>
                      <ON-TRANSITION-VALUE>2</ON-TRANSITION-VALUE>
                    </MODE-DECLARATION-GROUP>
%{: if generalConfig.condition_check }%
                    <MODE-DECLARATION-GROUP>
                      <SHORT-NAME>Coding_ConditionMode</SHORT-NAME>
                      <CATEGORY>EXPLICIT_ORDER</CATEGORY>
                      <INTRODUCTION>
                        <TRACE>
                          <SHORT-NAME>SWS_COD_059</SHORT-NAME>
                          <CATEGORY>SPECIFICATION_ITEM</CATEGORY>
                          <TRACE-REFS>
                            <TRACE-REF DEST="TRACEABLE">COD_059</TRACE-REF>
                          </TRACE-REFS>
                        </TRACE>
                      </INTRODUCTION>
                      <INITIAL-MODE-REF DEST="MODE-DECLARATION">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_ConditionMode/CODING_ALLOWED</INITIAL-MODE-REF>
                      <MODE-DECLARATIONS>
                        <MODE-DECLARATION>
                          <SHORT-NAME>CODING_ALLOWED</SHORT-NAME>
                          <VALUE>0</VALUE>
                        </MODE-DECLARATION>
                        <MODE-DECLARATION>
                          <SHORT-NAME>CODING_NOT_ALLOWED</SHORT-NAME>
                          <VALUE>1</VALUE>
                        </MODE-DECLARATION>
                      </MODE-DECLARATIONS>
                      <ON-TRANSITION-VALUE>2</ON-TRANSITION-VALUE>
                    </MODE-DECLARATION-GROUP>
%{:}%
                  </ELEMENTS>
                </AR-PACKAGE>
                <!-- Coding DataTypeMappingSets -->
                <AR-PACKAGE>
                  <SHORT-NAME>DataTypeMappingSets</SHORT-NAME>
                  <ELEMENTS>
                    <DATA-TYPE-MAPPING-SET>
                      <SHORT-NAME>Coding_DataTypeMappingSets</SHORT-NAME>
                      <MODE-REQUEST-TYPE-MAPS>
                        <MODE-REQUEST-TYPE-MAP>
                          <IMPLEMENTATION-DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/BMW/Platform/Coding/ImplementationDataTypes/Coding_LifeCycleRequestType</IMPLEMENTATION-DATA-TYPE-REF>
                          <MODE-GROUP-REF DEST="MODE-DECLARATION-GROUP">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_LifeCycle</MODE-GROUP-REF>
                        </MODE-REQUEST-TYPE-MAP>
                        <MODE-REQUEST-TYPE-MAP>
                          <IMPLEMENTATION-DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</IMPLEMENTATION-DATA-TYPE-REF>
                          <MODE-GROUP-REF DEST="MODE-DECLARATION-GROUP">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_SessionMode</MODE-GROUP-REF>
                        </MODE-REQUEST-TYPE-MAP>
%{: if generalConfig.condition_check }%
                        <MODE-REQUEST-TYPE-MAP>
                          <IMPLEMENTATION-DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</IMPLEMENTATION-DATA-TYPE-REF>
                          <MODE-GROUP-REF DEST="MODE-DECLARATION-GROUP">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_ConditionMode</MODE-GROUP-REF>
                        </MODE-REQUEST-TYPE-MAP>
%{:}%
                        <MODE-REQUEST-TYPE-MAP>
                          <IMPLEMENTATION-DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</IMPLEMENTATION-DATA-TYPE-REF>
                          <MODE-GROUP-REF DEST="MODE-DECLARATION-GROUP">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_DataMode</MODE-GROUP-REF>
                        </MODE-REQUEST-TYPE-MAP>
                        <MODE-REQUEST-TYPE-MAP>
                          <IMPLEMENTATION-DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</IMPLEMENTATION-DATA-TYPE-REF>
                          <MODE-GROUP-REF DEST="MODE-DECLARATION-GROUP">/BMW/Platform/Coding/ModeDeclarationGroups/Coding_BusComMode</MODE-GROUP-REF>
                        </MODE-REQUEST-TYPE-MAP>
                      </MODE-REQUEST-TYPE-MAPS>
                    </DATA-TYPE-MAPPING-SET>
                  </ELEMENTS>
                </AR-PACKAGE>
              </AR-PACKAGES>
            </AR-PACKAGE>
          </AR-PACKAGES>
        </AR-PACKAGE>
      </AR-PACKAGES>
    </AR-PACKAGE>
  </AR-PACKAGES>
</AUTOSAR>
