%{+ ../pageinclude/Dlog_Help.pgen }%
/*----------------------------------------------------------------------------*/
/**
*  \file
*
*  \brief       SWE Table.
*
*  \project     BMW AUTOSAR Core
*
*  \par         To be changed by user:
*               [no]
*
*  \copyright   BMW AG 2015 - 2016
*
*  \version     5.3.1
*
*/
/*----------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------
*
*  THIS FILE WAS GENERATED. DO NOT MODIFY!
*
*  GENERATOR       : %{= generation_tool() }% %{= generation_version_info() }%
*
*  GENERATION TIME : %{= generation_timestamp() }%
*
------------------------------------------------------------------------------*/

%{#
  into(container("DlogShared/DlogSharedGeneral/Swe"));
  sweGroupTable = SweGroupTable(container("SweGroupConfiguration"))
  sweTable = SweTable(container( "SweConfiguration" ), sweGroupTable)
  sweEntries = sweTable.Entries;

  numApplSwes = sweTable.NumberOfApplSwe;
  numSwes = sweTable.NumberOfEntries;
  numBootSwes = numSwes - numApplSwes;

  numPhysApplSwes = numApplSwes;

  reset();
  into(container("DlogShared/DlogSharedGeneral/Logistic"));

  DlogSweDevelopmentInfoLength = value(ref("DlogSweDevelopmentInfoLength"));
}%
/*------------------------------------------------------------------------------
                      MISRA-Deviations
------------------------------------------------------------------------------*/

/* Violation of MISRA rule 19.1, Reason: Including StbMB_MemMap.h is necessary throughout
   the file according to memory abstraction, see PRQA: 5087 */


/*------------------------------------------------------------------------------
                      Include Section
------------------------------------------------------------------------------*/

#include "Dlog_SweTable.h"
#include "Dlog_SweGen.h"


/*------------------------------------------------------------------------------
                      Macros
-------------------------------------------------------------------------------*/

/* check version of the module */
#if (!DlogClassic_CHECK_VERSION(5,3,1))
   #error "Version of Dlog_SweTable.c does not match the version of the module!"
#endif


/*------------------------------------------------------------------------------
                      Global Constants
-------------------------------------------------------------------------------*/

/* -------------------------------------------------------------------------- */
/*                      Boot.-SWE                                             */
/* -------------------------------------------------------------------------- */
#define BL_START_SEC_CONST_BOOTSWE_DESCRIPTION_TABLE
#include "Dlog_MemMap.h" /* PRQA S 5087 */

const Dlog_SweHeaderType Dlog_SweBootTable = {
    {  /* logistic data                                                        */
        BOOTSWECLASSIFICATIONDATA,
        0x00u, 0x00u, 0x00u, 0x00u,  /* Logistik Id */
        0x00u, 0x00u, 0x00u          /* Version */
    }
%{: if DlogSweDevelopmentInfoLength > 0 }%
#if (DLOG_SWE_DEV_INFO_LENGTH > 0u)
   , {BOOTSWEDEVINFO}
#else
   , {0}
#endif
%{:}%
};

#define BL_STOP_SEC_CONST_BOOTSWE_DESCRIPTION_TABLE
#include "Dlog_MemMap.h" /* PRQA S 5087 */

/* Boot flash status                                                          */
#define BL_START_SEC_CONST_BOOTSWE_FLASH_STATUS
#include "Dlog_MemMap.h" /* PRQA S 5087 */
const Dlog_SweFlashStatusType Dlog_BootFlashStatus = {
                                                     { DLOG_SWE_CRC_CHECKSUM_DATA },
                                                     { DLOG_SWE_VALID_FLAG_DATA },
                                                     { DLOG_PROG_DEP_DATA }
                                              };
#define BL_STOP_SEC_CONST_BOOTSWE_FLASH_STATUS
#include "Dlog_MemMap.h" /* PRQA S 5087 */

#define BL_START_SEC_CONST_BOOTSWE_SIGNATURE
#include "Dlog_MemMap.h" /* PRQA S 5087 */
const uint8 Dlog_BootSignature[DLOG_SIGNATURE_LENGTH] = {0};
#define BL_STOP_SEC_CONST_BOOTSWE_SIGNATURE
#include "Dlog_MemMap.h" /* PRQA S 5087 */

%{@ i in range(1, numPhysApplSwes + 1) }%
/* -------------------------------------------------------------------------- */
/*                      Appl.-SWE %{=i}%                                           */
/* -------------------------------------------------------------------------- */

/* SWE1 table                                                                 */
#define APPL_START_SEC_CONST_SWE%{=i}%_DESCRIPTION_TABLE
#include "Dlog_MemMap.h" /* PRQA S 5087 */
const Dlog_SweHeaderType Dlog_Swe%{=i}%Table =
{
   {  /* logistic data                                                        */
      SWE%{=i}%SWECLASSIFICATIONDATA,
     0x00u, 0x00u, 0x00u, %{="0x%02x" %(i)}%u, /* Logistik Id */
     0x00u, 0x00u, 0x00u                        /* Version */
   }
%{: if DlogSweDevelopmentInfoLength > 0 }%
#if (DLOG_SWE_DEV_INFO_LENGTH > 0u)
   , {SWE%{=i}%SWEDEVINFO}
#else
   , {0}
#endif
%{:}%
};
#define APPL_STOP_SEC_CONST_SWE%{=i}%_DESCRIPTION_TABLE
#include "Dlog_MemMap.h" /* PRQA S 5087 */

/* SWE%{=i}% flash status                                                          */
#define APPL_START_SEC_CONST_SWE%{=i}%_FLASH_STATUS
#include "Dlog_MemMap.h" /* PRQA S 5087 */
const Dlog_SweFlashStatusType Dlog_Swe%{=i}%FlashStatus =
                                              {
                                                     { DLOG_SWE_CRC_CHECKSUM_DATA },
                                                     { DLOG_SWE_VALID_FLAG_DATA },
                                                     { DLOG_PROG_DEP_DATA }
                                              };
#define APPL_STOP_SEC_CONST_SWE%{=i}%_FLASH_STATUS
#include "Dlog_MemMap.h" /* PRQA S 5087 */

/* SWE%{=i}% signature                                                          */
#define APPL_START_SEC_CONST_SWE%{=i}%_SIGNATURE
#include "Dlog_MemMap.h" /* PRQA S 5087 */
const uint8 Dlog_Swe%{=i}%Signature[DLOG_SIGNATURE_LENGTH] = {0};
#define APPL_STOP_SEC_CONST_SWE%{=i}%_SIGNATURE
#include "Dlog_MemMap.h" /* PRQA S 5087 */

%{@}%
