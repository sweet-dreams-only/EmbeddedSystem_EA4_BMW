<#@ AutosarXml processor="ArDirectiveProcessor" requires="arPrefix='ar';arNamespace='http://autosar.org/schema/r4.0'" #>
<#@ template inherits="AutosarDirectiveProcessor.ArGtcBase" debug="false" #>
<#@ output extension="" #>
/*----------------------------------------------------------------------------*/
/**
*  \file
*
*  \brief       BMW SWC Vin
*
*  This file contains the implementation of the BMW SWC Vin
*  for usage in the BMW AUTOSAR Core.
*
*  \project     BMW AUTOSAR Core
*
*  \par         To be changed by user: no
*
*  \copyright   BMW AG 2015 - 2017
*
*  \version     3.5.0
*
*  \remarks     --
*
*/
/*----------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------
*
*  THIS FILE WAS GENERATED. DO NOT MODIFY!
*
*  GENERATOR       : <#= GeneratorName #> <#= GeneratorVersion #>
*
*  GENERATION TIME : <#= DateTime.Now.ToString("dd.MM.yyyy HH:mm:ss") #>
*
------------------------------------------------------------------------------*/

#ifndef VIN_CFG_H
#define VIN_CFG_H

<#
   bool enableSecureVin = Exists(Xp.ContainerAtDefRefTo("Vin/SecureVin"));
   ChangeContext(Xp.ContainerAtDefRefTo("Vin/VinGeneral"));
   bool VinDetUsage = ValueOf(Xp.ValueAtDefRefTo("VinDevErrorDetect"));
   bool enableSIAdapter = ValueOf(Xp.ValueAtDefRefTo("EnableSIAdapter"));

#>

/*------------------------------------------------------------------------------
                      Include Section
------------------------------------------------------------------------------*/

#include <Std_Types.h>               /* AUTOSAR standard types */
#include "Vin_Version.h"            /* Own version header file */


/*------------------------------------------------------------------------------
                      Macros
------------------------------------------------------------------------------*/

/* check version of the module */
#if (!Vin_CHECK_VERSION(3,5,0))
   #error "Version of Vin_Cfg.h does not match the version of the module!"
#endif


/** The instance ID of the Vin module for usage in the DET */
#define VIN_DET_INSTANCE_ID 0U

#define VIN_RANDOM_NUMBER_GENERATOR_API_ID     1U
#define VIN_RTE_API_ID                         2U
#define VIN_NVM_API_ID                         3U
#define VIN_INTERNAL_API_ID                   99U

/**
 * \brief Switch for development error detection
 *
 * Activation of development error detection
 *
 * \remarks This macro depends on configuration parameter VinDevErrorDetect
 *
 */
<# if ( VinDetUsage ) { #>
#define Vin_DEV_ERROR_DETECT   STD_ON

#define Vin_Assert(condition, apiId, errorCode)                \
   do {                                                        \
      if (!(condition)) {                                      \
         (void)Rte_Call_DETService_Vin_ReportError             \
         (                                                     \
            VIN_DET_INSTANCE_ID,                               \
            (uint8)(apiId),                                    \
            (uint8)(errorCode)                                 \
         );                                                    \
      }                                                        \
   } while(0)

<# } else { #>
#define Vin_DEV_ERROR_DETECT   STD_OFF

#define Vin_Assert(condition, apiId, errorCode) do {} while(0)
<# } #>


/**
 * If set to STD_ON, the Fscsm module will be used to receive and check the
 * secure VIN.
 */
<# if (enableSecureVin) { #>
#define Vin_ENABLE_SECURE_VIN   STD_ON

<#    ChangeContext(null);
      ChangeContext(Xp.ContainerAtDefRefTo("Vin/SecureVin"));

      double timeoutCounterbase = ValueOf(Xp.ValueAtDefRefTo("TimeoutCounterbase"));
      double timeoutMac = ValueOf(Xp.ValueAtDefRefTo("TimeoutMac"));

      #>

#define VIN_MACREQUEST_MESSAGE_IDENTIFIER <#=ValueOf(Xp.ValueAtDefRefTo("SecureVinRequestMessageIdentifier"))#>u
#define Vin_REMOTE_SSS_ID       <#=ValueOf(Xp.ValueAtDefRefTo("RemoteSSSId"))#>u
#define Vin_TIMEOUT_MAC         <#=(int)(timeoutMac*10.0)#>u
#define Vin_TIMEOUT_COUNTERBASE <#=(int)(timeoutCounterbase*10.0)#>u
#define Vin_ERROR_LIMIT_COUNTERBASE <#=ValueOf(Xp.ValueAtDefRefTo("ErrorlimitCounterbase"))#>u
#define Vin_ERROR_LIMIT_MAC     <#=ValueOf(Xp.ValueAtDefRefTo("ErrorlimitCounterbase"))#>u
<# } else { #>
#define Vin_ENABLE_SECURE_VIN   STD_OFF
<# } #>

<# if (enableSIAdapter) { #>
#define Vin_ENABLE_SI_ADAPTER   STD_ON
<# } else { #>
#define Vin_ENABLE_SI_ADAPTER   STD_OFF
<# } #>

<#    ChangeContext(null);
      ChangeContext(Xp.ContainerAtDefRefTo("Vin/VinGeneral")); #>
/**
 * The ID to be used to request the VIN signal
 */
#define VIN_VINREQUEST_MESSAGE_IDENTIFIER <#=ValueOf(Xp.ValueAtDefRefTo("VinRequestMessageIdentifier"))#>u
<#

  double timeoutInit = ValueOf(Xp.ValueAtDefRefTo("TimeoutInitialVinRequest"));
  double timeoutRequest = ValueOf(Xp.ValueAtDefRefTo("TimeoutSubsequentVinRequests"));
  int maxNumRequests = ValueOf(Xp.ValueAtDefRefTo("MaxNumberVinRequests"));

#>
/**
 * Timeout between init an first VIN request in 100ms => 3=300ms
 */
#define VIN_TIMEOUT_INIT        <#=(int)(timeoutInit*10.0)#>u

/**
 * Timeout between a request and the next request in 100ms => 10=1s
 */
#define VIN_TIMEOUT_REQUEST     <#=(int)(timeoutRequest*10.0)#>u

/**
 * Maximum number of VIN requests.
 */
#define VIN_MAX_NUMBER_REQUESTS <#= maxNumRequests #>u

/*------------------------------------------------------------------------------
                      Data Types
------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------
                      Global Variables
------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------
                      Global Constants
------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------
                      Global Function Declarations
------------------------------------------------------------------------------*/

#endif /* VIN_CFG_H */

/*--- End of file ------------------------------------------------------------*/
